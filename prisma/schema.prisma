// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database/sqlite/dev.db"
}

model User {
  id       Int      @id @default(autoincrement())
  login    String   @unique
  password String
  Member   Member[]
}

model Member {
  id           Int            @id @default(autoincrement())
  name         String
  birth_date   DateTime
  batism_date  DateTime
  titleChurch  String
  cpf          BigInt         @unique
  rg           Int
  email        String
  foto         String?
  Manager      Manager[]
  Treasurer    Treasurer[]
  SpecialOffer SpecialOffer[]
  id_church    Int
  church       Church         @relation(fields: [id_church], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user      Int            @unique
  user         User           @relation(fields: [id_user], references: [id])

  @@map("members")
}

model Manager {
  id        Int       @id @default(autoincrement())
  id_member Int
  member    Member    @relation(fields: [id_member], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_church Int
  church    Church    @relation(fields: [id_church], references: [id], onDelete: Cascade, onUpdate: Cascade)
  startDate DateTime  @default(now())
  endDate   DateTime?

  @@map("managers")
}

model Treasurer {
  id        Int       @id @default(autoincrement())
  startDate DateTime  @default(now())
  endDate   DateTime?
  Offer     Offer[]
  id_member Int
  member    Member    @relation(fields: [id_member], references: [id])

  @@map("treasurers")
}

model Offer {
  id           Int            @id @default(autoincrement())
  value        Int
  SpecialOffer SpecialOffer[]
  id_treasurer Int
  treasurer    Treasurer      @relation(fields: [id_treasurer], references: [id], onDelete: SetDefault, onUpdate: SetDefault)
  Cult         Cult[]
  CultOffer    CultOffer[]

  @@map("offers")
}

model SpecialOffer {
  id        Int      @id @default(autoincrement())
  reason    String
  date      DateTime
  id_offer  Int
  offer     Offer    @relation(fields: [id_offer], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_member Int
  member    Member   @relation(fields: [id_member], references: [id], onDelete: SetDefault, onUpdate: SetDefault)
  id_church Int
  church    Church   @relation(fields: [id_church], references: [id], onDelete: SetDefault, onUpdate: SetDefault)
  Tethe     Tethe[]

  @@map("special_offers")
}

model Tethe {
  id               Int          @id @default(autoincrement())
  month            Int
  year             Int
  id_special_offer Int
  specialOffer     SpecialOffer @relation(fields: [id_special_offer], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("tethes")
}

model Church {
  id           Int            @id @default(autoincrement())
  creationDate DateTime
  Cult         Cult[]
  Cost         Cost[]
  id_location  Int
  location     Location       @relation(fields: [id_location], references: [id])
  SpecialOffer SpecialOffer[]
  Member       Member[]
  Manager      Manager[]

  @@map("churchs")
}

model Cult {
  id        Int         @id @default(autoincrement())
  date      DateTime
  theme     String
  id_offer  Int?
  offer     Offer?      @relation(fields: [id_offer], references: [id], onDelete: SetDefault, onUpdate: SetDefault)
  id_church Int
  church    Church      @relation(fields: [id_church], references: [id], onDelete: SetDefault, onUpdate: SetDefault)
  CultOffer CultOffer[]

  @@map("cults")
}

model Cost {
  id          Int      @id @default(autoincrement())
  value       Float
  date        DateTime
  description String
  id_church   Int
  church      Church   @relation(fields: [id_church], references: [id])

  @@map("costs")
}

model Location {
  id       Int      @id @default(autoincrement())
  street   String
  district String
  city     String
  state    String
  country  String
  cep      Int      @unique
  Church   Church[]

  @@map("locations")
}

model CultOffer {
  id       Int   @id @default(autoincrement())
  id_cult  Int
  cult     Cult  @relation(fields: [id_cult], references: [id])
  id_offer Int
  offer    Offer @relation(fields: [id_offer], references: [id])
}
